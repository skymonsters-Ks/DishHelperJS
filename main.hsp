#define global APPNAME "DishHelperJS"
#define global APPVER  "v.0.1.5.0"
#define global SITEURL "https://github.com/skymonsters-Ks/DishHelperJS"

#packopt name "hsp3dh_js"
#packopt icon "ico.ico"
#packopt manifest "app.manifest"
#packopt xsize 1
#packopt ysize 1
#packopt hide 1

#pack "lang_en.txt"

#include "hsp3utf.as"
#include "hspcmp.as"

#include "mod_util.hsp"
#include "mod_dpi.hsp"

#include "strmap.hsp"

#include "mod_app.hsp"

#uselib "user32"
#func GetSysColorBrush "GetSysColorBrush" int
#func MessageBeep "MessageBeep" int
#func MessageBoxIndirect "MessageBoxIndirectA" var
#func GetDC "GetDC" int
#func ReleaseDC "ReleaseDC" int, int
#uselib "gdi32"
#func SetBkMode "SetBkMode" int, int
#func GetStockObject "GetStockObject" int
#func SelectObject "SelectObject" int, int
#func Rectangle "Rectangle" int, int, int, int, int
#uselib "shell32"
#func dragAcceptFiles "DragAcceptFiles" int, int
#func dragQueryFile "DragQueryFileW" int, int, wptr, int
#func dragFinish "DragFinish" int

#define HSP3DISH_INI "hsp3dish.ini"
#define DIR_HSPJS "hsp3js"

#const WIN_SX 400
#const WIN_SY 188
#const SUBDIRLV_MAX 4


	splitString dir_cmdline
	pnum = stat

	sdim srcFile, 512
	fDebugMode = 0   ; デバッグモードで出力
	fNameIndex = 0   ; .html のファイル名を index にする
	fAutoResize = 0  ; <canvas>のサイズをクライアントエリアにフィットさせる
	fAxOnly = 0      ; .ax だけを出力
	fNoWin = 0       ; メインウィンドウを使わないでコンパイル・出力する
	sdim outDir, 512
	outDir = "public"   ; 出力フォルダ
	exeDir = dir_exe + "\\"
	
	; 言語
	strlang = ""

	repeat pnum
		prm = getSplitString(cnt)
		if (peek(prm) != '/') {
			srcFile = prm
			exist srcFile
			if (strsize < 0) {
				ERR_DIALOG strf("%s could not be found.", srcFile)
			}
		} else {
			getBothSides opt, val, strtrim(prm, 1, '/')
			switch getpath(opt, 16)
			case "debug"
				fDebugMode = 1
				swbreak
			case "index"
				fNameIndex = 1
				swbreak
			case "resize"
				fAutoResize = 1
				swbreak
			case "axonly"
				fAxOnly = 1
				swbreak
			case "nowin"
				fNoWin = 1
				swbreak
			case "outdir"
				if (val != "") {
					outDir = val
				}
				swbreak
			case "lang"
				strlang = val
				swbreak
			case "ver"
				ts = strf("%s %s\n\n", APPNAME, APPVER)
				ts += strf("Build: date %s %s HSP ver.%x", __date__, __time__, hspver)
				s = "About"
				mbp = 40, hwnd, hinstance, varptr(ts), varptr(s), $80/*MB_USERICON*/, 128
				MessageBeep $40/*MB_ICONINFORMATION*/
				MessageBoxIndirect mbp
				end
				swbreak
			default
				ERR_DIALOG strf("%s is an invalid option.", opt)
			swend
		}
	loop
	
	if (strlang != "") {
		f = "lang_" + strlang + ".txt"
		exist f
		if (strsize > 0) {
			strexchange f
		}
	}
	initStrmap

	if (fNoWin) {
		gosub *export
		end
	} else {
		#ifdef _debug
			screen 0, 1, 1, screen_hide
		#endif
		newmod dpiMain, mod_dpi, WIN_SX, WIN_SY, 16
		title APPNAME + " " + APPVER
		onexit gosub *byebye
		onkey gosub *evKey
		oncmd gosub *evPaint, $f ; WM_PAINT
		oncmd gosub *evGetMinMaxInfo, $24 ; WM_GETMINMAXINFO
		oncmd gosub *evCtlColorStatic, $138 ; WM_CTLCOLORSTATIC
		oncmd gosub *evDpiChanged, $2e0 ; WM_DPICHANGED
		oncmd gosub *evDropFiles, $233 ; WM_DROPFILES
		DragAcceptFiles hwnd, 1
		createDialog 1, 0
		gsel 0

		dpi_font dpiMain, strmap(STR_OBJFONT), 12

		setStaticText dpiMain, strmap(STR_SCRIPTPATH), 8, 7
		hTextSrcPath = objinfo_hwnd(stat)
		if (srcFile == "") {
			srcFile = strmap(STR_DEFSRCINPUT)
		}
		setInput dpiMain, srcFile, 8, 22, 364, 22
		hSrcFile = objinfo_hwnd(stat)
		setButton dpiMain, *selectScrFile, strmap(STR_REFBTN), 372, 22, 20, 22
		
		setStaticText dpiMain, strmap(STR_OUTDIR), 8, 47
		hTextOutDir = objinfo_hwnd(stat)
		setInput dpiMain, outDir, 8, 62, 384, 22
		hOutDir = objinfo_hwnd(stat)
		
		setCheckBox dpiMain, cbDebugMode,  fDebugMode,  strmap(STR_DEBUGOUT), 8, 96, *evCheck
		setCheckBox dpiMain, cbAxOnly,     fAxOnly,     strmap(STR_AXONLYOUT), 204, 96, *evCheck
		setCheckBox dpiMain, cbAutoResize, fAutoResize, strmap(STR_CANVASRESIZE), 8, 116
		setCheckBox dpiMain, cbNameIndex,  fNameIndex,  strmap(STR_HTMLINDEX), 204, 116
		gosub *evCheck
		
		setStaticBox dpiMain, 4, 147, WIN_SX - 8, 1
		hSeparator = objinfo_hwnd(stat)
		setButton dpiMain, *dispHelp, strmap(STR_HELP), 8, 155, 100, 26
		setButton dpiMain, *export, strmap(STR_EXPORT), 292, 155, 100, 26, 1
		
		dpi_change dpiMain
		gsel 0, 1
		stop
	}
*byebye
	if (ginfo_act == 1) {
		closeDialog
		return
	}
	end
	end

*evKey
	if (lparam >> 30 == 0) {
		switch ginfo_act
		case 0
			if (wparam == 13) {
				gosub *export
			}
			swbreak
		case 1
			if (wparam == 13 || wparam == 27) {
				closeDialog
			}
			swbreak
		swend
	}
	return

*evGetMinMaxInfo
	return 0 ; HSPのリサイズ制限避け

*evCtlColorStatic
	h = GetSysColorBrush(15) ; COLOR_BTNFACE
	switch lparam
	case hTextSrcPath
	case hTextOutDir
		SetBkMode wparam, 1 ; TRANSPARENT
		swbreak
	case hSeparator
		h = GetSysColorBrush(16) ; COLOR_BTNSHADOW
		swbreak
	swend
	return h

*evDpiChanged
	dpi_wmchanged dpiMain
	return 0

#deffunc clearMainWinBg local _id, local _dc, local _oo
	_id = ginfo_sel
	gsel 0
	_dc = GetDC(hwnd)
	_oo = SelectObject(_dc, GetSysColorBrush(15/*COLOR_BTNFACE*/))
	Rectangle _dc, -1, -1, ginfo_winx + 1, ginfo_winy + 1
	ReleaseDC hwnd, _dc
	SelectObject _dc, _oo
	gsel _id
	return

*evPaint
	clearMainWinBg
	return

*evCheck
	fDebugMode = getCheck(cbDebugMode)
	fAxOnly = getCheck(cbAxOnly)
	enableCheck cbDebugMode, fAxOnly ^ 1
	enableCheck cbAutoResize, (fAxOnly | fDebugMode) ^ 1
	enableCheck cbNameIndex, fAxOnly ^ 1
	return

*evDropFiles
	h = wParam
	sdim fn, 512
	DragQueryFile h, 0, varptr(fn), 512
	f = cnvwtos(fn)
	DragFinish h
	gosub *setSrcFile
	return

*selectScrFile
	dialog "hsp", 16, strmap(STR_HSPSCRIPT)
	if (stat) {
		f = refstr
		gosub *setSrcFile
	}
	return

*setSrcFile
	srcFile = f
	setWinText hSrcFile, f
	return

/* 
	proj
		src.hsp （ソーススクリプト）
		img.png
		data
			data.png
		public （以下出力フォルダ、projフォルダの外に出力可）
			start.html （名前変更可、indexオプションが優先される）
			dish （名前変更可）
				style.css
				hsp3dish.js
				load.js
			data （名前変更可）
				start.ax （名前変更可、indexオプションが無効の場合htmlと同名になる）
				img.png
				data
					data.png
*/   
*export
	srcFile = strtrim(srcFile, 3, '\"')
	srcFile = toFullPath(strtrim(srcFile))
	exist srcFile
	if (strsize < 0) {
		INFO_DIALOG strmap(STR_NOSCRIPT)
		return
	}
	srcName = getpath(srcFile, 9)
	srcDir = getpath(srcFile, 32)

	chdir srcDir

	if (fNoWin == 0) {
		outDir = getWinText(hOutDir)
	}

	outDir = strtrim(outDir, 3, '\"')
	outDir = strtrim(outDir)
	if (outDir == "") {
		INFO_DIALOG strmap(STR_NOOUTDIR)
		return
	}
	outDir = toFullPath(strtrim(outDir)) + "\\"
	if (outDir == srcDir) {
		INFO_DIALOG strf(strmap(STR_INVALIDFOLDER), outDir)
		return
	}
	
	loadIni HSP3DISH_INI

	fUTF8 = int(getIniData("UTF8", "0")) ; UTF-8 のスクリプトを使用
	fname = getpath(getIniData("StartName", srcName), 9) ; 出力する.ax,.htmlファイル名
	axname = fname + ".ax"

	; コンパイル、ax出力
	hsc_ini srcFile
	hsc_refname getpath(srcFile, 8)
	hsc_objname axname
	hsc_comp 4 * (fUTF8 == 0), 32 * (fUTF8 != 0)
	if (stat) {
		n = 0
		hsc3_messize n
		sdim buf, n
		hsc_getmes buf
		INFO_DIALOG strf("%s\n\n%s", strmap(STR_ERRCOMPILE), cnvatos(buf))
		return
	}

	sdim runtime
	hsc3_getruntime runtime, axname
	runtime = getpath(runtime, 25)
	if (runtime != "hsp3dish" && runtime != "hsp3gp") {
		INFO_DIALOG strmap(STR_INVALIDRUNTIME)
		return
	}

	; データフォルダ（ソースフォルダからの相対）
	; ソースフォルダもしくはその直下のフォルダでなければならない
	; ソースフォルダ以外のフォルダはサブフォルダも検索対象になる
	getIniDataFiles dataDirs, "DataFolder", ".\\|data|res"
	numdir = stat
	n = 0
	repeat numdir
		dir = toFullPath(dataDirs(cnt)) + "\\"
		if (dirExists(dir) && instr(dir, 0, srcDir) == 0) {
			; データフォルダが存在かつソースフォルダ内にある
			if (dir != srcDir) {
				if (instr(outDir, 0, dir) == 0) {
					; データフォルダと出力フォルダが同じか 
					; データフォルダ内に出力フォルダがある
					n = -1
					break
				}
			}
			getstr dataDirs(n), dir, strlen(srcDir)
			n++
		}
	loop
	if (n < 0) {
		INFO_DIALOG strf(strmap(STR_INVALIDFOLDER), outDir)
		return
	}
	numdir = n

	; js, css を出力するフォルダと、データファイル(ax含む)を出力するフォルダ
	dishOutFolder = getpath(getIniData("OutDishFolder", "dish"), 9)
	dataOutFolder = getpath(getIniData("OutDataFolder", "data"), 9)
	if (getpath(dishOutFolder, 16) == getpath(dataOutFolder, 16)) {
		INFO_DIALOG strmap(STR_INVALIDDIR_DISHDATA)
		return
	} else {
		dishOutDir = outDir + dishOutFolder + "\\"
		dataOutDir = outDir + dataOutFolder + "\\"
	}
	
	if (fAxOnly) {
		INFO_DIALOG strf(strmap(STR_MAKEAX), axname)
		if (dirExists(dataOutDir)) {
			bcopyEx axname, dataOutDir + axname
			if (stat == 0) {
				ERR_DIALOG strf(strmap(STR_FAILCOPYAX), axname)
			}
		}
		return
	}

	makeDir dataOutDir
	if (stat) {
		bcopyEx axname, dataOutDir + axname
		if (stat == 0) {
			ERR_DIALOG strf(strmap(STR_FAILCOPYAX), axname)
		}
	} else {
		ERR_DIALOG strf(strmap(STR_FAILMAKEDIR), dataOutDir)
	}

	; データファイルのリストアップ対象の拡張子（拡張子なしはアンダーバー）
	getIniDataFiles dataExts, "DataExtensions", "bmp|png|jpg|jpeg|wav|mp3|ogg|gpb|material|frag|vert|ttf"
	numext = stat
	repeat numext
		if (dataExts(cnt) == "_") {
			dataExts(cnt) = ""
		} else {
			dataExts(cnt) = "." + dataExts(cnt)
		}
	loop

	; データフォルダから無視するファイル
	; 各階層のファイルが対象になる (img.png -> img.png, data\img.png, res\img.png, ...)
	getIniDataFiles ignFiles, "IgnoredFiles", "obj|hsptmp|packfile"
	numign = stat
	n = 0
	repeat numign : i = cnt
		ext = getpath(ignFiles(i), 2)
		repeat numext
			if (ext == dataExts(cnt)) {
				ignFiles(n) = ignFiles(i)
				n++
			}
		loop
	loop
	numign = n

	sdim prefiles, 3200

	; データファイルのリストアップとコピー
	if (numdir > 0 && numext > 0) {
		newmod pfiles, vlstring, 4096
		repeat numdir
			dir = dataDirs(cnt)
			if (dir == "") {
				listFolders list
			} else {
				chdir dir
				listFolders list, SUBDIRLV_MAX
			}
			fnum = stat
			newmod dlist, nexliner, list
			repeat fnum
				getNextLine dlist, dpath
				ext = getpath(dpath, 18)
				repeat numext
					if (ext != dataExts(cnt)) : continue
					if (numign) {
						n = 0
						f = getpath(dpath, 24)
						repeat numign
							if (f == ignFiles(cnt)) {
								n++
								break
							}
						loop
						if (n) : break
					}
					dpath = dir + dpath
					odpath = dataOutDir + dpath
					oddir = getpath(odpath, 32)
					makeDir oddir
					if (stat == 0) {
						ERR_DIALOG strf(strmap(STR_FAILMAKEDIR), oddir)
					}
					bcopyEx srcDir + dpath, odpath
					if (stat == 0) {
						ERR_DIALOG strf(strmap(STR_FAILCOPYAX), dpath)
					}
					strrep dpath, "\\", "/"
					catString pfiles, strf("'%s',", dpath)
				loop
			loop
			delmod dlist
			chdir srcDir
		loop
		prefiles += getString(pfiles)
		delmod pfiles
	}

	if (prefiles != "") {
		poke prefiles, strlen(prefiles) - strlen(",") ; 最後のコンマを削除
	}
	
	makeDir dishOutDir
	if (stat == 0) {
		ERR_DIALOG strf(strmap(STR_FAILMAKEDIR), dishOutDir)
	}
	if (runtime == "hsp3gp") {
		ts = "-gp"
	} else {
		ts = ""
	}
	sdim dishfs
	dishfs(0) = "hsp3dish" + ts + ".js"
	dishfs(1) = "hsp3dish" + ts + ".wasm"
	dishfs(2) = "load.js"
	dishfs(3) = "style.css"
	foreach dishfs
		bcopyEx exeDir + DIR_HSPJS + "\\" + dishfs(cnt), dishOutDir + dishfs(cnt)
		if (stat == 0) {
			ERR_DIALOG strf(strmap(STR_FAILCOPYAX), dishfs(cnt))
		}
	loop

	fn = exeDir + DIR_HSPJS + "\\temp.html"
	exist fn
	if (strsize < 0) {
		INFO_DIALOG strf(strmap(STR_FILENOTEXIST), HTML_TMP)
		return
	}
	sdim buf, strsize * 3
	bload fn, buf

	env = ""
	x = getIniData("wx", "640")
	y = getIniData("wy", "480")
	env += strf("\"HSP_WX\":\"%s\",\"HSP_WY\":\"%s\",", x, y)
	x = getIniData("sx", x)
	y = getIniData("sy", y)
	env += strf("\"HSP_SX\":\"%s\",\"HSP_SY\":\"%s\",", x, y)
	env += strf("\"HSP_LIMIT_STEP\":\"%s\"", getIniData("step", "5000"))
	strrep buf, "___DISH_ENV___", env
	strrep buf, "___TITLE___", getIniData("Title", fname)
	strrep buf, "___CANVAS_WIDTH___", x
	strrep buf, "___CANVAS_HEIGHT___", y
	strrep buf, "___DIR_PREDATA___", dataOutFolder
	strrep buf, "___AX_FILE___", fname + ".ax"
	strrep buf, "___PRELOAD_FILES___", prefiles
	strrep buf, "___CSS___", dishOutFolder + "/" + dishfs(3)
	strrep buf, "___JS_LOAD___", dishOutFolder + "/" + dishfs(2)
	strrep buf, "___JS_DISH___", dishOutFolder + "/" + dishfs(0)
	head = ""
	foot = ""
	f = fAutoResize
	if (fDebugMode) {
		foot = "<textarea id=\"output\" rows=\"8\"></textarea><br>"
		f = 0
	}
	if (f) {
		resize = "true"
		style = "*{margin:0;}#header,#footer{display:none;}"
	} else {
		resize = "false"
		style = strf(".emscripten_border{weight:%spx;height:%spx;}", x, y)
		head += getIniData("HtmlHeader", "")
		foot += getIniData("HtmlFooter", "")
	}
	strrep buf, "___RESIZABLE___", resize
	strrep buf, "___STYLE___", getIniData("Style", "") + style
	strrep buf, "___HTML_HEAD___", head
	strrep buf, "___HTML_FOOT___", foot

	if (fNameIndex) {
		fn = "index"
	} else {
		fn = fname
	}
	bsave outDir + fn + ".html", buf, strlen(buf)
	
	INFO_DIALOG strmap(STR_SUCCESSEXPORT)
	return

*dispHelp
	exec SITEURL, 16
	return
